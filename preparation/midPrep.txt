[20230313]

1. C 언어의 개요

컴파일 -> 링킹 -> 실행

 //1. 컴파일 에러: 쉬움, 문법적 오류임. 고쳐주면 됨
 //2. 목적파일(object file): 2진법으로 기술된 파일. obj파일을 다 연결시키면 .exe파일이 나온다(실행파일) -> 실행됨! 여기서 링킹이 잘못되면 링크에러가 뜸
 //3. 논리 에러: 제일 고치기 힘듦...

.C -> compile -> .obj(binary code) -> linking -> .exe -> loader ->execute on CPU

2. C언어의 변수와 자료형

변수?? 자료형?? 

[20230320]

CH3: 입력과 출력

변환명세의 종류는 외워야 한다. -> printf() 함수에 쓰임: 문자열 안에 들어있는 변수를 출력하는 함수

%d: 정수, %f: 실수, %c: char형, %s: 문자열...

ex)
int examN = 5;

printf("The number of exams are %d", examN);


**문자열은 메모리 주소와 연관이 있다!!!(꼭 기억할것...)

**변환명세의 필드폭, 플래그, 정밀도(p.83)
	1. 자료의 크기가 가변적일 때 세로로 가지런히 맞춰 출력하기

	int n1 = 9;
	int n2 = 77;
	int n3 = 100;

	printf("1. %d cm \n", n1);
	printf("2. %d cm \n", n2);
	printf("3. %d cm \n", n2);

	%(+-)(필드폭)d  

	(필드폭): 전체 출력 칸
	+: 오른쪽 맞춤 
	-: 왼쪽 맞춤
	



[20230405]

반복문
for, while, do~ while 총 3개

for -> 반복 횟수를 정확히 알고 있을때
while -> 반복의 종료 조건을 알고 있을때
do~ while -> 반복 내용을 반드시 한번 실행한 후, 계속 할지말지 결정할 때 유

****** 위 세게의 형식을 모두 사용할 줄 알아야 한다!!

반복문 주의사항(필수구조): 1.  초기화 2. 조건문 3. 증감연산 -> 3가지 구성요소를 만족해야함!!!

*주의* 반복문을 통해 누적을 시행할때, 누적을 저장하는 변수는 꼭 초기화 해줘야 한다.

*주의* C언어에서는 for(int i = 1; ...)의 문법을 지원하지 않는다. 반복을 주관하는 변수는 미리 정의해야한다!
	   C++ 언어에서는 괄호안에 반복을 주관하는 변수 i의 초기화가 가능하다. 근데 시험에서는 이렇게 쓰면 감점임


중첩된 반복문
 행우선, 열우선 언어...
 C, Python -> 행우선! 가장 바깥쪽 for: 행부터 지정!


[20230410]

<중첩된 for문>

 중괄호와 들여쓰기...주의 해야한다...

<기타제어문>

break, continue

-> break는 for문에서만 쓰인다고 생각하자! if 안에도 쓸 수는 있는데
<20230417>

Dev C++ : projects...?

명령행....int main(int argc, char *argv[])
			-> main 함수 헤더가 이렇게 바뀜!!
		

이거 왜 함? -> 중간중간 변수에 저장된 값을 확인하며 디버깅 하기 위해서
			   logical error를 수정하는데 있어서 효율적이다!


<시험>

연산자 우선순위...for문...등등 문법에 대한 내용!!

실기: 에러를 찾는 문제: 왜 에러가 뜨나? 컴파일러 에러임. 로지컬 에러는 출제X
      코드를 답안지에 쓰는 문제....해당되는 코드만 쓰면 된다. 헤더파일, 함수 호출문 등등은 쓰지 않아도 된다.

	  완벽하지는 않더라도 에러가 뜨지 않도록!! 에러 뜨면 일단 50점부터임...


